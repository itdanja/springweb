# : \uC8FC\uC11D
#application.properties : \uC560\uD50C\uB9AC\uCF00\uC774\uC158 \uD504\uB85C\uC81D\uD2B8 \uC124\uC815 \uD30C\uC77C
############# \uC790\uB3D9\uBE4C\uB4DC
spring.devtools.restart.enabled = true 

############# \uB0B4\uC7A5 \uD1B0\uCEA3 \uC11C\uBC84 \uD3EC\uD2B8 \uBCC0\uACBD
server.port = 8080

###############  rds mysql \uC124\uC815
### 1. mysql \uB4DC\uB77C\uC774\uBC84 \uD074\uB798\uC2A4 \uD638\uCD9C [  \uADF8\uB808\uC774\uB4E4 \uCD94\uAC00 : mysql:mysql-connector-java ]
#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
### 2. db \uC5F0\uACB0 =" jdbc:mysql://IP\uC8FC\uC18C:PORT\uBC88\uD638/DB\uBA85
#spring.datasource.url= jdbc:mysql://awsrds.cdjqopt1lnnx.ap-northeast-2.rds.amazonaws.com:3306/spring?serverTimezone=Asia/Seoul
### 3. db \uACC4\uC815\uC815\uBCF4
#spring.datasource.username= rds \uC544\uC774\uB514
#spring.datasource.password= rds \uBE44\uBC00\uBC88\uD638
#
### \uC11C\uBC84 \uC2E4\uD589\uC2DC \uBCC0\uACBD\uC0AC\uD56D\uC774 \uC788\uC744\uACBD\uC6B0 \uC790\uB3D9 \uC5C5\uB370\uC774\uD2B8
#spring.jpa.hibernate.ddl-auto=update


#############  local mysql \uC124\uC815
# 1. mysql \uB4DC\uB77C\uC774\uBC84 \uD074\uB798\uC2A4 \uD638\uCD9C [  \uADF8\uB808\uC774\uB4E4 \uCD94\uAC00 : mysql:mysql-connector-java ]
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
# 2. db \uC5F0\uACB0 =" jdbc:mysql://IP\uC8FC\uC18C:PORT\uBC88\uD638/DB\uBA85
spring.datasource.url= jdbc:mysql://localhost:3307/spring?serverTimezone=Asia/Seoul
# 3. db \uACC4\uC815\uC815\uBCF4
spring.datasource.username=root
spring.datasource.password=1234
################ \uC774\uD6C4\uBD80\uD130 \uB294 \uC120\uD0DD\uC0AC\uD56D ###############
## 4. sql \uBB38\uC744 console \uC5D0 \uD45C\uAE30
##spring.jpa.properties.hibernate.show_sql=true
#spring.jpa.show-sql=true
## 4. sql \uBB38\uC744 console \uC5D0 \uBCF4\uAE30 \uC88B\uAC8C \uD45C\uAE30
#spring.jpa.properties.hibernate.format_sql=true
## 4. SQL \uBB38\uC744 console\uC5D0  ? \uD30C\uB77C\uBBF8\uD130\uAC00 \uBB50\uC778\uC9C0 \uD45C\uAE30
#logging.level.org.hibernate.type.descriptor.sql = trace
# 5. DDL \uC790\uB3D9 \uC635\uC158
# \uC11C\uBC84 \uC2E4\uD589\uC2DC \uBCC0\uACBD\uC0AC\uD56D\uC774 \uC788\uC744\uACBD\uC6B0 \uC790\uB3D9 \uC5C5\uB370\uC774\uD2B8
spring.jpa.hibernate.ddl-auto=update
# \uC11C\uBC84 \uC2E4\uD589\uC2DC \uAE30\uC874\uD14C\uC774\uBE14 \uC0AD\uC81C\uD6C4 \uC790\uB3D9 \uC0DD\uC131
#spring.jpa.hibernate.ddl.auto = create
# 6. mysql \uC678 \uB2E4\uB978 db\uC5B8\uC5B4\uB97C \uC0AC\uC6A9\uD788 \uD638\uD658\uD574\uC8FC\uB294 \uC5ED\uD560 [ MySQL8Dialect \uB77C\uB294 \uACF5\uD1B5 db \uC0AC\uC6A9 ]
spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect


############# \uB124\uC774\uBC84 SMTP \uC124\uC815
spring.mail.host=smtp.naver.com
spring.mail.port = 587
spring.mail.username = \uBCF4\uB0B4\uB294\uC0AC\uB78C\uC774\uBA54\uC77C
spring.mail.password = \uBCF4\uB0B8\uB294\uC0AC\uB78C\uC774\uBA54\uC77C \uBE44\uBC00\uBC88\uD638
spring.mail.properties.mail.smtp.auth = true
spring.mail.properties.mail.smtp.starttls.enable = true


##\uCCA8\uBD80\uD30C\uC77C \uC6A9\uB7C9
server.servlet.multipart.maxFileSize = 10MB
server.servlet.multipart.maxRequestSize =  100MB


## \uCE74\uCE74\uC624 \uB85C\uADF8\uC778
# 1. \uD074\uB77C\uC774\uC5B8\uD2B8\uC758 REST API \uD0A4 \uC640 \uBCF4\uC548 \uCF54\uB4DC
spring.security.oauth2.client.registration.kakao.client-id = 7dc37d88ec2a5f582f8261fb80980d3c
spring.security.oauth2.client.registration.kakao.client-secret = Eo4J1Oc3dshA6MJFMH9YXIQjRJToOC02
# 2. \uB3D9\uC758\uD56D\uBAA9 [ \uB3D9\uC758\uD56D\uBAA9 ID ]
spring.security.oauth2.client.registration.kakao.scope = profile_nickname,account_email
# 3. \uD074\uB77C\uC774\uC5B8\uD2B8 \uC774\uB984
spring.security.oauth2.client.registration.kakao.client-name=kakao
# 4. \uD1A0\uD070 \uC694\uCCAD \uBC29\uC2DD [ ** \uCE74\uCE74\uC624\uB9CC \uD574\uB2F9 ]
spring.security.oauth2.client.registration.kakao.client-authentication-method=post
# 5. \uD1A0\uD070 \uC694\uCCAD
spring.security.oauth2.client.registration.kakao.authorization-grant-type=authorization_code
# 6. \uC694\uCCADurl : Redirect URI           http://localhost:8080/login/oauth2/code/kakao
spring.security.oauth2.client.registration.kakao.redirect-uri={baseUrl}/{action}/oauth2/code/{registrationId}
# 7. \uC694\uCCAD url : \uC778\uC99D URI
spring.security.oauth2.client.provider.kakao.authorization-uri=https://kauth.kakao.com/oauth/authorize
# 8. \uC694\uCCAD url : \uD1A0\uD070 URI
spring.security.oauth2.client.provider.kakao.token-uri=https://kauth.kakao.com/oauth/token
# 9. \uC694\uCCAD url : \uD1A0\uD070 \uBC1B\uC740 \uD68C\uC6D0\uC815\uBCF4 URI
spring.security.oauth2.client.provider.kakao.user-info-uri=https://kapi.kakao.com/v2/user/me
# 10. \uD68C\uC6D0\uC815\uBCF4 \uAC00\uC838\uC62C \uC774\uB984 [ json\uD615\uC2DD\uC73C\uB85C kakao_account \uD0A4\uAC12\uC744 \uC774\uC6A9\uD574\uC11C ]
spring.security.oauth2.client.provider.kakao.user-name-attribute=kakao_account


#\uB124\uC774\uBC84 \uB85C\uADF8\uC778
# 1. \uD074\uB77C\uC774\uC5B8\uD2B8\uC758 REST API \uD0A4 \uC640 \uBCF4\uC548 \uCF54\uB4DC
spring.security.oauth2.client.registration.naver.client-id = HjhMM5gJ7Lu4Iwqr7z7A
spring.security.oauth2.client.registration.naver.client-secret = KaK67R8KZL
# 2. \uB3D9\uC758\uD56D\uBAA9 [ \uB3D9\uC758\uD56D\uBAA9 ID ]
spring.security.oauth2.client.registration.naver.scope = name , email 
# 3. \uD074\uB77C\uC774\uC5B8\uD2B8 \uC774\uB984
spring.security.oauth2.client.registration.naver.client-name= naver
# 5. \uD1A0\uD070 \uC694\uCCAD
spring.security.oauth2.client.registration.naver.authorization-grant-type=authorization_code
# 6. \uC694\uCCADurl : Redirect URI
spring.security.oauth2.client.registration.naver.redirect-uri={baseUrl}/{action}/oauth2/code/{registrationId}

# 7. \uC694\uCCAD url : \uC778\uC99D URI
spring.security.oauth2.client.provider.naver.authorization-uri=https://nid.naver.com/oauth2.0/authorize
# 8. \uC694\uCCAD url : \uD1A0\uD070 URI
spring.security.oauth2.client.provider.naver.token-uri=https://nid.naver.com/oauth2.0/token
# 9. \uC694\uCCAD url : \uD1A0\uD070 \uBC1B\uC740 \uD68C\uC6D0\uC815\uBCF4 URI
spring.security.oauth2.client.provider.naver.user-info-uri=https://openapi.naver.com/v1/nid/me
# 10. \uD68C\uC6D0\uC815\uBCF4 \uAC00\uC838\uC62C \uC774\uB984 [ json\uD615\uC2DD\uC73C\uB85C response \uD0A4\uAC12\uC744 \uC774\uC6A9\uD574\uC11C ]
spring.security.oauth2.client.provider.naver.user-name-attribute=response

# \uAD6C\uAE00 [ \uC2A4\uD504\uB9C1 \uC2DC\uD050\uB9AC\uD2F0 \uC9C0\uC6D0 ]
# 1. \uD074\uB77C\uC774\uC5B8\uD2B8\uC758 REST API \uD0A4 \uC640 \uBCF4\uC548 \uCF54\uB4DC
spring.security.oauth2.client.registration.google.client-id = 1049080819402-q1lh7hu3dd7e5hido1lo3sh13nm3ma92.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret = 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
# 2. \uB3D9\uC758\uD56D\uBAA9 [ \uB3D9\uC758\uD56D\uBAA9 ID ]
spring.security.oauth2.client.registration.google.scope = email , profile









